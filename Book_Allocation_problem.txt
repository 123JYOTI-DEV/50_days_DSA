//Book ALlocation Problem 

public class Book_Allocation_Problem2 {
    public static boolean is_Possible_Solution(int[] arr , int n,int m , int mid){
        int studentCount =1;
        int pageSum = 0;
        for(int i =0; i<n ; i++){
            if(pageSum + arr[i] <=mid){
                pageSum += arr[i];
            }
            else {
                studentCount ++ ;
                if(studentCount>m || arr[i] > mid ){
                    return false ;
                }
                pageSum = arr[i];
            }
        }
        return true;

    }
    public static int findSolution(int[] arr , int n,int m){
        int start = 0;
        int sum =0;
        int ans = -1;
        for(int i =0; i<n;i++)
        {
            sum = sum+arr[i];
        }
        int end = sum;
        int mid = start + (end - start)/2;
        while(start<=end)
        {
           if(is_Possible_Solution(arr,n,m,mid)){
               ans = mid;
               end = mid-1;
           }
           else {
               start = mid +1;
           }
           mid = start + (end - start)/2;
        }
        return ans ;
    }
    public static void main(String[] args){
        int[] arr ={10,20,30,40};
        int n = 4;  // n is the number of total number of books present in array
        int m = 2; // m is the number of student
        System.out.println("Maximum number of page allocated to the student in minimum is : " + findSolution(arr,n,m));


    }
}


Output :- 
Maximum number of page allocated to the student in minimum is : 60

Process finished with exit code 0

